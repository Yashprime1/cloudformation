{
    "AWSTemplateFormatVersion" : "2010-09-09",
    "Parameters" : {
        "RegionPrefix": {
            "Type": "String",
            "Default": ""
        }
    },
    "Mappings": {
        "AWSAMIMapping": {
           "ap-south-1": {
              "HVM64" : "ami-0d81306eddc614a45"
           },
           "ap-northeast-2": {
              "HVM64": "ami-0994dc69c39c35834"
           },
           "eu-west-1": {
              "HVM64": "ami-04bf55d5e589debe9"
           }
        }
     },
    "Resources" : { 
        "IrisEcsCluster":{
            "Type":"AWS::ECS::Cluster",
            "Properties":{
                "Tags":[
                    {
                        "Key":"Name",
                        "Value":"Iris"
                    },
                    {
                        "Key":"Cluster Name",
                        "Value":{"Fn::Join":["-",[{"Ref":"RegionPrefix"},"IrisEcsCluster"]]}
                    }
                ]
            }
        },
        "IrisInstacneIamRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "ec2.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyName": "IrisInstanceIamRolePolicy",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                                "ec2:DescribeInstances",
                                                "ec2-instance-connect:SendSSHPublicKey",
                                                "ec2:DescribeInstances",
                                                "ec2:DescribeTags",
                                                "ec2:CreateTags",
                                                "ecs:RegisterContainerInstance",
                                                "ecs:DeregisterContainerInstance",
                                                "ecs:DescribeContainerInstances",
                                                "ecs:DiscoverPollEndpoint",
                                                "ecs:*",
                                                "ec2:*",
                                                "logs:*"
                                        ],
                                    "Resource": [
                                        "arn:aws:ec2:*:*:instance/*",
                                        "arn:aws:ecs:*:*:cluster/*",
                                        "*"
                                    ]
                                 }
                                ]
                            }
                    }
                ]
            }
        },
        "IrisInstacneIamProfile":{
            "Type":"AWS::IAM::InstanceProfile",
            "Properties":{
                "Path":"/",
                "Roles":[
                    {
                        "Ref":"IrisInstacneIamRole"
                    }
                ]
            }
        },
        "IrisInstanceKeyPair": {
            "Type": "AWS::EC2::KeyPair",
            "Properties": {
                "KeyName": "MyKeyPair"
            }
        },
        "IrisLaunchConfiguration": {
            "Type": "AWS::AutoScaling::LaunchConfiguration",
            "Properties": {
                "AssociatePublicIpAddress": "true",
                "ImageId": {
                    "Fn::FindInMap": [
                        "AWSAMIMapping",
                        {
                            "Ref": "AWS::Region"
                        },
                        "HVM64"
                    ]
                },
                "InstanceType": "t2.micro",
                "KeyName": {
                    "Ref": "IrisInstanceKeyPair"
                },
                "SecurityGroups": [
                    {
                        "Fn::ImportValue":{
                            "Fn::Join":[
                                "-",
                                [
                                    {
                                        "Ref":"RegionPrefix"
                                    },
                                    "IRISInstanceSecurityGroupId"
                                ]
                            ]
                        }
                    }
                ],
                "IamInstanceProfile": {
                    "Ref": "IrisInstacneIamProfile"
                },
                "UserData":{
                    "Fn::Base64":{
                        "Fn::Join":[
                            "",
                            [
                                "#!/bin/bash\n",
                                "mkdir -p /etc/ecs\n",  
                                "echo ECS_CLUSTER",
                                "=",
                                {"Ref":"IrisEcsCluster"},
                                " >> /etc/ecs/ecs.config\n",
                                "amazon-linux-extras install -y ecs\n",
                                "echo ECS_ENABLE_TASK_IAM_ROLE=true >> /etc/ecs/ecs.config\n",
                                "echo ECS_ENABLE_TASK_ENI=true >> /etc/ecs/ecs.config\n",
                                "echo ECS_ENABLE_DOCKER_REMOTE_API=true >>  /etc/ecs/ecs.config\n",
                                "systemctl enable --now --no-block ecs\n",
                                "curl -s http://localhost:51678/v1/metadata | python -mjson.tool\n"
                            ]
                        ]
                    }
                }
            }
        },
        "IrisAutoscalingGroup": {
            "Type": "AWS::AutoScaling::AutoScalingGroup",
            "Properties": {
                "AvailabilityZones": [
                    {"Fn::Select": ["0", {"Fn::GetAZs": ""}]},
                    {"Fn::Select": ["1", {"Fn::GetAZs": ""}]},
                    {"Fn::Select": ["2", {"Fn::GetAZs": ""}]}
                ],
                "LaunchConfigurationName": { "Ref" : "IrisLaunchConfiguration" },
                "MaxSize": "2",
                "MinSize": "1",
                "DesiredCapacity": "1",
                "VPCZoneIdentifier": [
                    {
                        "Fn::ImportValue": 
                            {
                                "Fn::Sub": "${RegionPrefix}-public-subnet-1-id"
                            }
                    },
                    {
                        "Fn::ImportValue": 
                            {
                                "Fn::Sub": "${RegionPrefix}-public-subnet-2-id"
                            }
                    },
                    {
                        "Fn::ImportValue": 
                            {
                                "Fn::Sub": "${RegionPrefix}-public-subnet-3-id"
                            }
                    }
                ]
            }
        },  
        "IrisLoadBalancer":{
            "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
            "Properties": {
                "Scheme": "internet-facing",
                "Subnets": [
                    {
                        "Fn::ImportValue": 
                            {
                                "Fn::Sub": "${RegionPrefix}-public-subnet-1-id"
                            }
                    },
                    {
                        "Fn::ImportValue": 
                            {
                                "Fn::Sub": "${RegionPrefix}-public-subnet-2-id"
                            }
                    },
                    {
                        "Fn::ImportValue": 
                            {
                                "Fn::Sub": "${RegionPrefix}-public-subnet-3-id"
                            }
                    }
                ],
                "SecurityGroups": [ 
                    {
                        "Fn::ImportValue":{
                            "Fn::Join":[
                                "-",
                                [
                                    {
                                        "Ref":"RegionPrefix"
                                    },
                                    "IRISLoadBalancerSecurityGroupId"
                                ]
                            ]
                        }
                    }
                ],
                "Type": "application"
            }
        },
        "IrisTargetGroup":{
            "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
            "Properties": {
                "HealthCheckIntervalSeconds": 30,
                "HealthCheckPath": "/",
                "HealthCheckProtocol": "HTTP",
                "HealthCheckTimeoutSeconds": 5,
                "HealthyThresholdCount": 2,
                "Matcher": {
                    "HttpCode": "200"
                },
                "HealthCheckPort":"3000",
                "Port": 3000,
                "Protocol": "HTTP",
                "TargetType": "ip",
                "VpcId": { "Fn::ImportValue" : { "Fn::Join" : [ "-", [ { "Ref" : "RegionPrefix" }, "vpc","id" ] ] } }
            }
        },
        "IrisListener":{
            "Type": "AWS::ElasticLoadBalancingV2::Listener",
            "Properties": {
                "DefaultActions": [
                    {
                        "Type": "forward",
                        "TargetGroupArn": { "Ref" : "IrisTargetGroup" }
                    }
                ],
                "LoadBalancerArn": { "Ref" : "IrisLoadBalancer" },
                "Port": 80,
                "Protocol": "HTTP"
            }
        }
    },
    "Outputs":{
        "IrisLoadBalancerDNSName":{
            "Export": { "Name": { "Fn::Join" : [ "-", [ { "Ref" : "AWS::StackName" }, "IrisLoadBalancerDNSName" ] ] } },
            "Value": { "Fn::GetAtt" : [ "IrisLoadBalancer", "DNSName" ] },
            "Description": "DNS name of the Iris load balancer"
        },
        "IrisTargetGroupArn":{
            "Export": { "Name": { "Fn::Join" : [ "-", [ { "Ref" : "AWS::StackName" }, "IrisTargetGroupArn" ] ] } },
            "Value": { "Ref" : "IrisTargetGroup" },
            "Description": "ARN of the Iris target group"
        },
        "IrisEcsClusterName":{
            "Export": { "Name": { "Fn::Join" : [ "-", [ { "Ref" : "AWS::StackName" }, "IrisEcsClusterName" ] ] } },
            "Value": { "Ref" : "IrisEcsCluster" },
            "Description": "Name of the Iris Ecs Cluster"
        }
    }
}