{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Parameters":{
        "RegionPrefix":{
            "Type":"String",
            "Default":""
        }
    },
    "Mappings": {
        "AWSAMIMapping": {
           "ap-south-1": {
              "HVM64" : "ami-0d81306eddc614a45"
           },
           "ap-northeast-2": {
              "HVM64": "ami-0994dc69c39c35834"
           },
           "eu-west-1": {
              "HVM64": "ami-04bf55d5e589debe9"
           }
        }
     },
    "Resources":{        
        "EC2InstacneIamRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "ec2.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyName": "EC2InstanceIamRolePolicy",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                    {
                                        "Effect": "Allow",
                                        "Action": [
                                                    "ec2:DescribeInstances",
                                                    "ec2-instance-connect:SendSSHPublicKey",
                                                    "ec2:DescribeInstances",
                                                    "ec2:DescribeTags",
                                                    "ec2:CreateTags",
                                                    "ecs:RegisterContainerInstance",
                                                    "ecs:DeregisterContainerInstance",
                                                    "ecs:DescribeContainerInstances",
                                                    "ecs:DiscoverPollEndpoint",
                                                    "ecs:*",
                                                    "ec2:*",
                                                    "logs:*"
                                            ],
                                        "Resource": [
                                            "arn:aws:ec2:*:*:instance/*",
                                            "arn:aws:ecs:*:*:cluster/*",
                                            "*"
                                        ]
                                    },
                                    {
                                        "Effect": "Allow",
                                        "Action": [
                                            "ssm:DescribeAssociation",
                                            "ssm:GetDeployablePatchSnapshotForInstance",
                                            "ssm:GetDocument",
                                            "ssm:DescribeDocument",
                                            "ssm:GetManifest",
                                            "ssm:GetParameter",
                                            "ssm:GetParameters",
                                            "ssm:ListAssociations",
                                            "ssm:ListInstanceAssociations",
                                            "ssm:PutInventory",
                                            "ssm:PutComplianceItems",
                                            "ssm:PutConfigurePackageResult",
                                            "ssm:UpdateAssociationStatus",
                                            "ssm:UpdateInstanceAssociationStatus",
                                            "ssm:UpdateInstanceInformation"
                                        ],
                                        "Resource": "*"
                                    },
                                    {
                                        "Effect": "Allow",
                                        "Action": [
                                            "ssmmessages:CreateControlChannel",
                                            "ssmmessages:CreateDataChannel",
                                            "ssmmessages:OpenControlChannel",
                                            "ssmmessages:OpenDataChannel"
                                        ],
                                        "Resource": "*"
                                    },
                                    {
                                        "Effect": "Allow",
                                        "Action": [
                                            "ec2messages:AcknowledgeMessage",
                                            "ec2messages:DeleteMessage",
                                            "ec2messages:FailMessage",
                                            "ec2messages:GetEndpoint",
                                            "ec2messages:GetMessages",
                                            "ec2messages:SendReply"
                                        ],
                                        "Resource": "*"
                                    }
                                ]
                            }
                    }
                ]
            }
        },
        "EC2InstacneIamProfile":{
            "Type":"AWS::IAM::InstanceProfile",
            "Properties":{
                "Path":"/",
                "Roles":[
                    {
                        "Ref":"EC2InstacneIamRole"
                    }
                ]
            }
        },  
        "EC2InstanceKeyPair": {
            "Type": "AWS::EC2::KeyPair",
            "Properties": {
                "KeyName": "MyKeyPair"
            }
        },
        "SSMGitParmaterStore": {
            "Type": "AWS::SSM::Parameter",
            "Properties": {
                "Name": "/git/ultron/token",
                "Type": "String",
                "Value": ""
            }
        },
        "EC2InstancePrimary":{
            "Type":"AWS::EC2::Instance",
            "Properties":{
                "ImageId":{
                    "Fn::FindInMap": [
                        "AWSAMIMapping",
                        { "Ref": "AWS::Region" },
                        "HVM64"
                    ]
                },
                "InstanceType":"t2.micro",
                "IamInstanceProfile": {
                    "Ref": "EC2InstacneIamProfile"
                },
                "UserData":{
                    "Fn::Base64":{
                        "Fn::Join":[
                            "",
                            [
                                "#!/bin/bash\n",
                                "sudo yum install -y https://s3.amazonaws.com/ec2-downloads-windows/SSMAgent/latest/linux_amd64/amazon-ssm-agent.rpm\n",
                                "yum install git",
                                "systemctl status amazon-ssm-agent\n"
                            ]
                        ]
                    }
                },
                "KeyName": {
                    "Ref": "EC2InstanceKeyPair"
                },
                "NetworkInterfaces": [ {
                    "AssociatePublicIpAddress": "true",
                    "DeviceIndex": "0",
                    "GroupSet": [     {
                        "Fn::ImportValue": 
                            {
                                "Fn::Sub": "${RegionPrefix}-MongoInstanceSecurityGroupId"
                            }
                    }],
                    "SubnetId":  {
                        "Fn::ImportValue": 
                            {
                                "Fn::Sub": "${RegionPrefix}-public-subnet-1-id"
                            }
                    }
                  } ],
                "Tags":[
                    {
                        "Key":"Name",
                        "Value":"EC2InstancePrimary"
                    },
                    {
                        "Key":"role",
                        "Value":"compute"
                    }
                ]
            }
        },
        "UltronBranchCleanupSsmDocument": {
            "Type": "AWS::SSM::Document",
            "Properties": {
                "Content": {
                    "schemaVersion": "2.2",
                    "description": "Document to cleanup ultron branches",
                    "parameters": {
                    },
                    "mainSteps": [
                        {
                        "inputs": {
                            "runCommand": [
                              "echo \"Cleaning up ultron branches\" >> /tmp/ultron_cleanup.log\n",
                              "#!/bin/bash\n",
                              "set -euo pipefail\n",
                              "echo \"Starting script\"\n",
                              "export GAT=$(aws ssm get-parameter --name /git/ultron/token --query 'Parameter.Value' --output text)\n",
                              "if [ -d \"cloudformation\" ]\n",
                              "then\n",
                                      "echo \"Directory already exists\"\n",
                              "else\n",
                                      "git clone \"https://${GAT}@github.com/Yashprime1/cloudformation.git\"\n",
                              "fi\n",
                              "cd cloudformation\n",
                              "git remote set-url origin \"https://${GAT}@github.com/Yashprime1/cloudformation.git\"\n",
                              "git remote -v\n",
                              "max_difference_days=0\n",
                              "merged_branches=$(git fetch --prune | git branch -r --merged | grep -v \"main$\")\n",
                              "for branch in ${merged_branches}\n",
                              "do\n",
                                  "echo \"Checking latest commit timestamp for $branch :\"\n",
                                  "latest_commit_id=$(git log $branch | grep commit | head -1 | awk -F ' ' '{print $2}')\n",
                                  "echo \"Latest commit_id for $branch is $latest_commit_id\"\n",
                                  "latest_commit_timestamp=$(git show --format=\"%aI\" $latest_commit_id | head -1)\n",
                                  "latest_commit_timestamp=$(date -u -d \"$latest_commit_timestamp\" +\"%Y-%m-%dT%H:%M:%SZ\")\n",
                                  "current_timestamp=$(date -u +\"%Y-%m-%dT%H:%M:%SZ\")\n",
                                  "echo \"Latest commit timestamp - $latest_commit_timestamp\"\n", 
                                  "echo \"Current timestamp - $current_timestamp\"\n",
                                  "latest_commit_timestamp_in_seconds=$(date -d $latest_commit_timestamp +%s)\n",
                                  "current_timestamp_in_seconds=$(date -d $current_timestamp +%s)\n",
                                  "difference_in_seconds=$(($current_timestamp_in_seconds-$latest_commit_timestamp_in_seconds))\n",
                                  "difference_in_days=$(($difference_in_seconds/60/60/24))\n",
                                  "if [ $difference_in_days -ge $max_difference_days ]\n",
                                  "then\n",
                                      "echo \"Deleting $branch\"\n", 
                                      "git push origin --delete $(echo $branch | awk -F '/' '{ print $2}')\n",
                                      "if [ $? -ne 0 ]\n",
                                      "then\n",
                                          "echo \"Failed to delete $branch\"\n",
                                          "exit 1\n",
                                      "else\n",
                                          "echo \"Successfully deleted $branch\"\n",
                                      "fi\n",
                                  "else\n",
                                      "echo \"Skipped $branch since latest-commit:$latest_commit_id is not greater than $max_difference_days days (currently just $difference_in_days days behind today)\"\n",
                                  "fi\n",
                              "done\n"
                            ]
                        },
                        "name": "ExecutingCleanupScript",
                        "action": "aws:runShellScript",
                        "onFailure": "Abort"
                        }
                    ]
                },
                "DocumentType": "Command",
                "Tags": [
                    {
                        "Key": "Team",
                        "Value": "DevOps"
                    }
                ]
            }
        },
        "UltronBranchCleanupSsmMaintenanceWindow": {
            "Type": "AWS::SSM::MaintenanceWindow",
            "Properties":{
                "Name": "UltronBranchCleanupMaintenanceWindow",
                "Schedule": "cron(* */1 * * ? *)",
                "Duration": 2,
                "Cutoff": 1,
                "AllowUnassociatedTargets": false
            }
        },
        "UltronBranchCleanupSsmMaintenanceWindowTarget":{
            "Type" : "AWS::SSM::MaintenanceWindowTarget",
            "Properties" : {
                "ResourceType" : "INSTANCE",
                "Targets" : [ 
                    {
                        "Key" : "tag:role",
                        "Values" : [ "compute" ]
                    }
                ],
                "WindowId" : {
                    "Ref" : "UltronBranchCleanupSsmMaintenanceWindow"
                }
              }
        },
        "UltronBranchCleanupSsmMaintenanceWindowTask" : {
            "Type" : "AWS::SSM::MaintenanceWindowTask",
            "Properties" : {
              "Priority" : 1,
              "TaskType" : "RUN_COMMAND",
              "MaxConcurrency":"1",
              "MaxErrors":"1",
              "TaskArn" : {
                "Ref": "UltronBranchCleanupSsmDocument"
              },
              "WindowId" : {
                "Ref" : "UltronBranchCleanupSsmMaintenanceWindow"
              },
              "Targets" : [ 
                {
                    "Key":"WindowTargetIds",
                    "Values":[
                        {
                            "Ref" : "UltronBranchCleanupSsmMaintenanceWindowTarget"
                        }
                    ]
                }
             ]
            }
        }
    }
}