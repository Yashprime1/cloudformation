{
    "Parameters": {
        "RegionPrefix":{
            "Type":"String",
            "Default":""
        }   
    },
    "Resources": {
      "AirflowEnvironmentExecutionIamRole": {
        "Type": "AWS::IAM::Role",
        "Properties": {
          "AssumeRolePolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Principal": {
                  "Service": [
                    "airflow.amazonaws.com",
                    "airflow-env.amazonaws.com"
                  ]
                },
                "Action": "sts:AssumeRole"
              }
            ]
          },
          "Path": "/"
        }
      },     
      "AirflowEnvironmentExecutionIamPolicy": {
        "Type": "AWS::IAM::Policy",
        "Properties": {
          "PolicyName": {
            "Fn::Join": [
              "-",
              [
                {
                  "Ref": "AWS::StackName"
                },
                "AirflowEnvironmentExecutionIamPolicy"
              ]
            ]
          },
          "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Action": "airflow:PublishMetrics",
                "Resource": "*"
              },
              {
                "Effect": "Deny",
                "Action": "s3:ListAllMyBuckets",
                "Resource": [
                  {
                    "Fn::ImportValue": {
                        "Fn::Sub": "${RegionPrefix}-AirflowEnvironmentDagsS3BucketArn"                    
                    }
                  },
                  {
                    "Fn::Join": [
                      "/",
                      [
                        {
                            "Fn::ImportValue": {
                                "Fn::Sub": "${RegionPrefix}-AirflowEnvironmentDagsS3BucketArn"                    
                            }
                        },
                        "*"
                      ]
                    ]
                  }
                ]
              },
              {
                "Effect": "Allow",
                "Action": [
                  "s3:GetObject*",
                  "s3:GetBucket*",
                  "s3:List*"
                ],
                "Resource": [
                  {
                    "Fn::ImportValue": {
                        "Fn::Sub": "${RegionPrefix}-AirflowEnvironmentDagsS3BucketArn"                                        
                    }
                  },
                  {
                    "Fn::Join": [
                      "/",
                      [
                        {
                            "Fn::ImportValue": {
                                "Fn::Sub": "${RegionPrefix}-AirflowEnvironmentDagsS3BucketArn"                    
                            }
                        },
                        "*"
                      ]
                    ]
                  }
                ]
              },
              {
                "Effect": "Allow",
                "Action": [
                  "logs:CreateLogStream",
                  "logs:CreateLogGroup",
                  "logs:PutLogEvents",
                  "logs:GetLogEvents",
                  "logs:GetLogRecord",
                  "logs:GetLogGroupFields",
                  "logs:GetQueryResults"
                ],
                "Resource": "*"
              },
              {
                "Effect": "Allow",
                "Action": [
                  "logs:DescribeLogGroups"
                ],
                "Resource": "*"
              },
              {
                "Effect": "Allow",
                "Action": "cloudwatch:PutMetricData",
                "Resource": "*"
              },
              {
                "Effect": "Allow",
                "Action": [
                  "kms:Decrypt",
                  "kms:DescribeKey",
                  "kms:GenerateDataKey*",
                  "kms:Encrypt",
                  "kms:CreateGrant",
                  "kms:ListGrants",
                  "kms:RevokeGrant"
                ],
                "Resource": [
                  "arn:aws:kms:*:*"
                ]
              },
              {
                "Effect": "Allow",
                "Action": [
                  "secretsmanager:GetSecretValue"
                ],
                "Resource": [
                  {
                    "Ref": "BitbucketAccessTokenSecretsManagerSecret"
                  }
                ],
                "Sid": "AllowAirflowToFetchSecretsFromSecretManager"
              },
              {
                "Effect": "Allow",
                "Action": [
                  "secretsmanager:DescribeSecret",
                  "secretsmanager:ListSecrets",
                  "secretsmanager:ListSecretVersionIds"
                ],
                "Resource": "*",
                "Sid": "AllowAirflowToListSecretsBitbucketTokenSecretsManagerSecret"
              }
            ]
          },
          "Roles": [
            {
              "Ref": "AirflowEnvironmentExecutionIamRole"
            }
          ]
        }
      },
      "AirflowEnvironmentKMSKey": {
        "Type": "AWS::KMS::Key",
        "Properties": {
          "Description": "KeyUsedForEncryptingAirflowEnvironment",
          "Enabled": true,
          "EnableKeyRotation": true,
          "KeyPolicy": {
            "Version": "2012-10-17",
            "Id": "key-default-1",
            "Statement": [
              {
                "Sid": "EnableIAMPoliciesToGiveIAMUsersAndRolesInTheAccountAccessToThisCMK",
                "Effect": "Allow",
                "Principal": {
                  "AWS": {
                    "Fn::Join": [
                      ":",
                      [
                        "arn:aws:iam:",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        "root"
                      ]
                    ]
                  }
                },
                "Action": "kms:*",
                "Resource": "*"
              },
              {
                "Sid": "AllowS3AndAirFlowToUseThisKey",
                "Effect": "Allow",
                "Principal": {
                  "Service": [
                    "logs.amazonaws.com"
                  ]
                },
                "Action": [
                  "kms:Decrypt*",
                  "kms:Describe*",
                  "kms:GenerateDataKey*",
                  "kms:Encrypt*",
                  "kms:ReEncrypt*",
                  "kms:PutKeyPolicy"
                ],
                "Resource": "*"
              }
            ]
          }
        }
      },
      "AirflowEnvironment": {
        "Type": "AWS::MWAA::Environment",
        "Properties": {
          "AirflowVersion": "2.2.2",
          "DagS3Path": "dags",
          "EnvironmentClass": "mw1.small",
          "ExecutionRoleArn": {
            "Fn::GetAtt": [
              "AirflowEnvironmentExecutionIamRole",
              "Arn"
            ]
          },
          "KmsKey": {
            "Fn::GetAtt": [
              "AirflowEnvironmentKMSKey",
              "Arn"
            ]
          },
          "LoggingConfiguration": {
            "TaskLogs" : {
              "LogLevel": "INFO",
              "Enabled" : true
            }
          },
          "MaxWorkers": 3,
          "MinWorkers": 1,
          "Name": "AirflowEnvironment2",
          "NetworkConfiguration": {
            "SubnetIds": [
              {
                "Fn::ImportValue": {
                    "Fn::Sub": "${RegionPrefix}-private-subnet-1-id"
                }
              },
              {
                "Fn::ImportValue": {
                    "Fn::Sub": "${RegionPrefix}-private-subnet-2-id"
                }
              }
            ],
            "SecurityGroupIds": [
            {
                "Fn::ImportValue": 
                    {
                        "Fn::Sub": "${RegionPrefix}-AirflowInstanceSecurityGroupId"
                    }
            }
            ]
          },
          "RequirementsS3Path": "requirements.txt",
          "Schedulers": 2,
          "SourceBucketArn": {
            "Fn::ImportValue": {
                "Fn::Sub": "${RegionPrefix}-AirflowEnvironmentDagsS3BucketArn"                    
            }
          },
          "WebserverAccessMode": "PUBLIC_ONLY"
        }
      },
      "BitbucketAccessTokenSecretsManagerSecret": {
        "Type": "AWS::SecretsManager::Secret",
        "Properties": {
          "Description": {
            "Fn::Sub": "This is a Secrets Manager secret for ${AWS::StackName}-SendGridSMTPAPIkeySecretsManagerSecret"
          },
          "SecretString": "replaceItWithSendGridSMTPAPIkey"
        }
      }
    }
  }